
CREATE TABLE FILE_DETAIL (
	FILE_ID INT NOT NULL AUTO_INCREMENT,
	FILE_NAME VARCHAR(50) NOT NULL,
	COLD_SUBMITTER VARCHAR(20) NOT NULL,
	RECEIVED DATE NOT NULL,
    COMEPLETED DATETIME,
	STATUS VARCHAR(50),
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (FILE_ID),
	INDEX (FILE_ID),
	INDEX (FILE_NAME)
); 

CREATE TABLE AMAD (
	COLD_ID INT NOT NULL,
    AMADNO INT NOT NULL,
	ENTRY DATE NOT NULL,
	PERSON_ID INT NOT NULL, 
	PACKETS INT NOT NULL,
	KISM VARCHAR(25),
	YEAR INT NOT NULL,
	MARK VARCHAR(50) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	PRIMARY KEY (COLD_ID,AMADNO,YEAR),
	INDEX (COLD_ID),
	INDEX (AMADNO),
    INDEX (PERSON_ID), 	
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID), 
	FOREIGN KEY (COLD_ID) REFERENCES COLD_INFO (COLD_ID) 
);

raw --
CREATE TABLE AMAD (
	COLD_ID INT NOT NULL,
    AMADNO INT NOT NULL,
	ENTRY DATE NOT NULL,
	PARTY VARCHAR(100) NOT NULL, 
	VILL VARCHAR(100) NOT NULL, 
	PACKETS INT NOT NULL,
	KISM VARCHAR(25),
	YEAR INT NOT NULL,
	MARK VARCHAR(50) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	PRIMARY KEY (COLD_ID,AMADNO,YEAR),
	INDEX (COLD_ID),
	INDEX (AMADNO),  	 
	FOREIGN KEY (COLD_ID) REFERENCES COLD_INFO (COLD_ID) 
);


CREATE TABLE AMAD_NIKASI (
	COLD_ID INT NOT NULL,
    AMADNO INT NOT NULL,
	ENTRY DATE NOT NULL,
	NIKASI DATE NOT NULL,
	PERSON_ID INT NOT NULL, 
	PACKETS INT NOT NULL,
	KISM VARCHAR(10),
	YEAR INT NOT NULL,
	MARK VARCHAR(50) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (COLD_ID,AMADNO,YEAR),
	INDEX (COLD_ID),
	INDEX (AMADNO),
    INDEX (PERSON_ID), 
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID), 
	FOREIGN KEY (COLD_ID) REFERENCES COLD_INFO (COLD_ID)
);

CREATE TABLE COLD_INFO (
    COLD_ID INT NOT NULL AUTO_INCREMENT,
	COLD_SUBMITTER VARCHAR(10) NOT NULL,
    COLD_NAME VARCHAR(50) NOT NULL,
    ADDRESS_ID INT NOT NULL,
	CONTACT_ID INT NOT NULL,
	OWNER_ID INT NOT NULL,
    FACEBOOK_URL VARCHAR(50) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (COLD_ID),
	INDEX (COLD_ID),
	INDEX (COLD_NAME),
	FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID),
	FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (CONTACT_ID),
	FOREIGN KEY (OWNER_ID) REFERENCES OWNER (OWNER_ID)
);



raw--
CREATE TABLE COLD_INFO (
    COLD_ID INT NOT NULL AUTO_INCREMENT,
	COLD_SUBMITTER VARCHAR(10) NOT NULL,
    COLD_NAME VARCHAR(50) NOT NULL,
    FACEBOOK_URL VARCHAR(50) NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (COLD_ID,COLD_SUBMITTER) 
);


insert into COLD_INFO (COLD_SUBMITTER,COLD_NAME,FACEBOOK_URL) values('lodhirajcs','Lodhi Rajput ice & cold storage pvt. ltd','');

insert into COLD_INFO (COLD_SUBMITTER,COLD_NAME,FACEBOOK_URL) values('papgudcs','Pappu and Guddu ice & cold storage pvt. ltd','');
insert into COLD_INFO (COLD_SUBMITTER,COLD_NAME,FACEBOOK_URL) values('niniramcs','Ninnu Ram ice & cold storage pvt. ltd','');
  
CREATE TABLE OWNER (
    OWNER_ID INT NOT NULL, 
    PERSON_ID INT NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (OWNER_ID),
	INDEX (OWNER_ID)
);

CREATE TABLE PERSON (
    PERSON_ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(20) NOT NULL,
	MIDDLE_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	PARENT_ID INT NOT NULL,
	PHONE INT NOT NULL, 
    ADDRESS_ID INT NOT NULL,
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (PERSON_ID,FIRST_NAME,PARENT_ID,ADDRESS_ID),
	INDEX (PERSON_ID),
	INDEX (ADDRESS_ID), 
	FOREIGN KEY (PARENT_ID) REFERENCES PARENT (PARENT_ID), 
	FOREIGN KEY (PHONE) REFERENCES CONTACT (PHONE),
	FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID)
);
 

CREATE TABLE CONTACT ( 
    PHONE BIGINT NOT NULL,
	PHONE2 BIGINT,
    EMAIL VARCHAR(50),  
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (PHONE), 
	INDEX (PHONE)
);

CREATE TABLE ADDRESS (
    ADDRESS_ID INT NOT NULL AUTO_INCREMENT,
	PARENT VARCHAR(20),
	GRAM VARCHAR(20),
	GRAM_PANCHAYAT VARCHAR(20),
	VIKASH_KHAND VARCHAR(20),
	STREET VARCHAR(20),
	STREET2 VARCHAR(20),
	MOHALLA VARCHAR(20),
	TEHSIL VARCHAR(20) NOT NULL,
	CITY VARCHAR(20) NOT NULL,
    DISTRICT VARCHAR(20) NOT NULL,
	STATE VARCHAR(15) NOT NULL,
	COUNTRY VARCHAR(15) NOT NULL,
	PINCODE INT NOT NULL,
	LOCATION VARCHAR(50),
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ADDRESS_ID),
	INDEX (GRAM)	
);
-------------- 

insert into ADDRESS(PARENT,GRAM,GRAM_PANCHAYAT,VIKASH_KHAND,STREET,STREET2,MOHALLA,TEHSIL,CITY,DISTRICT,STATE,COUNTRY,PINCODE) values('','','','','etah road','','','shikohabad','shikohabad','firozabad','up','india',205141);

alter table CONTACT change COLUMN LAST_UPDATED DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

alter table COLD_INFO drop FOREIGN KEY COLD_INFO_ibfk_2;

alter table CONTACT drop column CONTACT_ID;

alter table CONTACT add primary key(PCREATE TABLE CONTACT ( 
    PHONE BIGINT NOT NULL,
	PHONE2 BIGINT,
    EMAIL VARCHAR(50),  
    LAST_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (PHONE), 
	INDEX (PHONE)
);HONE);



org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO AMAD(COLD_ID,AMADNO,ENTRY,PARTY,VILL,PACKETS,KISM,YEAR,MARK) VALUES (?,?,?,?,?,?,?,?,?)]; Duplicate entry '1-10001-2021' for key 'amad.PRIMARY'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1-10001-2021' for key 'amad.PRIMARY'

		
		

